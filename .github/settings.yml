# These settings are synced to GitHub by https://github.com/github/safe-settings
repository: 
  # description: description of the repo
  # homepage: https://example.github.io/
  auto_init: true
  # topics: github, probot, new-topic, another-topic, topic-12
  # private: true
  # visibility: private
  has_issues: true
  has_projects: true
  has_wiki: true
  default_branch: main
  # gitignore_template: node
  # license_template: mit
  allow_squash_merge: true
  allow_merge_commit: false
  allow_rebase_merge: false
  allow_auto_merge: true
  delete_branch_on_merge: true  
labels:
  - name: bug
    color: CC0000
    description: An issue with the system

  - name: feature
    color: '#336699'
    description: New functionality.

  - name: first-timers-only
    color: '#326699'
    description: First timers only

  - name: duplicate
    color: '#326699'
    description: 
    
  - name: enhancement
    color: '#326699'
    description: Enhancement

# Milestones: define milestones for Issues and Pull Requests
milestones:
  - title: Whatever
    description: Whatever description
    state: open

collaborators:
  # Collaborators: give specific users access to any repository.
  # See https://docs.github.com/en/rest/reference/collaborators#add-a-repository-collaborator for available options
  - username: gomete
    permission: admin
  - username: serpargu
    permission: push
    include:
      - oarch
      - openarch-api
  - username: svg153
    permission: pull
    exclude:
      - openarch-api

# # See https://docs.github.com/en/rest/reference/teams#create-a-team for available options
# teams:
#   - name: core
#     # The permission to grant the team. Can be one of:
#     # * `pull` - can pull, but not push to or administer this repository.
#     # * `push` - can pull and push, but not administer this repository.
#     # * `admin` - can pull, push and administer this repository.
#     permission: admin
#   - name: docss
#     permission: push
#   - name: docs
#     permission: pull

# branches:
#   # If the name of the branch value is specified as `default`, then the app will create a branch protection rule to apply against the default branch in the repo
#   - name: default
#     # https://docs.github.com/en/rest/reference/branches#update-branch-protection
#     # Branch Protection settings. Set to null to disable
#     protection:
#       # Required. Require at least one approving review on a pull request, before merging. Set to null to disable.
#       required_pull_request_reviews:
#         # The number of approvals required. (1-6)
#         required_approving_review_count: 1
#         # Dismiss approved reviews automatically when a new commit is pushed.
#         dismiss_stale_reviews: true
#         # Blocks merge until code owners have reviewed.
#         require_code_owner_reviews: true
#         # Specify which users and teams can dismiss pull request reviews. Pass an empty dismissal_restrictions object to disable. User and team dismissal_restrictions are only available for organization-owned repositories. Omit this parameter for personal repositories.
#         dismissal_restrictions:
#           users: []
#           teams: []
#       # Required. Require status checks to pass before merging. Set to null to disable
#       required_status_checks:
#         # Required. Require branches to be up to date before merging.
#         strict: true
#         # Required. The list of status checks to require in order to merge into this branch
#         contexts: []
#       # Required. Enforce all configured restrictions for administrators. Set to true to enforce required status checks for repository administrators. Set to null to disable.
#       enforce_admins: true
#       # Required. Restrict who can push to this branch. Team and user restrictions are only available for organization-owned repositories. Set to null to disable.
#       restrictions:
#         apps: []
#         users: []
#         teams: []

validator:
  pattern: '[a-zA-Z0-9_-]+'
